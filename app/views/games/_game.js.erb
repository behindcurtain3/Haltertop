var gImages;
var gImagesLoaded = false;
var gImageLoadIndex = 0;
var gImagePath = "../images/"
var gChess;

$(function(){
  $.ajaxSetup ({
      cache: false
  });

  $('#black-move').hide();
  $('#white-move').hide();

  loadImages();

  gChess = new Chess(document.getElementById("game"), <%= @game.id %>, "<%= (current_user? @game.white) ? "white" : (current_user? @game.black) ? "black" : "observer" %>");
  gChess.numMoves = <%= @game.moves.count %>;
  <%= "gChess.inverted = true;" if current_user? @game.black %>
  gChess.init();
  
  $(document).everyTime(50, "images_loading", function(){
    if(gImagesLoaded){
      $(document).stopTime("images_loading");
      gChess.loadPieces();
      
      <% if @game.result.nil? %>
	<% if @game.waiting_for_promotion? %>
      gChess.turn('<%= (@game.current_board.get_turn == "white") ? "black" : "white" %>');
      gChess.askForPromotion('<%= (@game.current_board.get_turn == "white") ? "black" : "white" %>')
	<% else %>
      gChess.turn('<%= @game.current_board.get_turn %>');
	<% end %>
        <%  if (current_user?(@game.black) || current_user?(@game.white)) %>
      gChess.canvasElement.addEventListener("click", clickListener, false);
        <% end %>

      $(document).everyTime(gChess.interval, "loop", function(){
	gChess.loop();
      });

      <% else %>
        <% if @game.winner? @game.black %>
          $('#black').addClass('highlight');
          $('#black-move').fadeIn();
        <% elsif @game.winner? @game.white %>
          $('#white').addClass('highlight');
          $('#white-move').fadeIn();
        <% end %>
          // Just loop once
          $(document).oneTime(gChess.interval, "loop", function(){
            gChess.loop();
          });
      <% end %>

      $("#board").fadeIn('slow');
    }
  });
  <% if @game.result.nil? %>
  var pusher = new Pusher('<%= Pusher.key %>');
  var channel = pusher.subscribe('<%= @game.id %>');
  channel.bind('opponent_added', function(data) {
    console.log(data);
    var pName = $('#black-name');
    if(data.color == "white"){
      pData = $('#white-name');
    }
    pName.html(data.name);

  });
  channel.bind('move', function(data) {
    console.log(data);
    if(data.status == "success"){
      if(data.promotion != null){
	gChess.askForPromotion(data.promotion);
      } else {
	gChess.move(data);
	gChess.capture(data.capture);
	gChess.set(data.set);
	gChess.turn(data.turn);
	gChess.numMoves++;

	var i = Math.ceil(gChess.numMoves / 2);
	if(gChess.numMoves % 2 != 0){
	  var s = '<li id="move_' + i + '">' + data.notation + '</li>';
	  $('#move_list').append(s);
	} else {
	  $('#move_' + i).append('&nbsp;' + data.notation);
	}
      }

    } else {
      $.gritter.add({
	  title: data.title,
	  text: data.text
      });
    }
  });
  <% end %>

});

function clickListener(e){
  gChess.canvasOnClick(e);
}