var gImages;
var gImagesLoaded = false;
var gImageLoadIndex = 0;
var gImagePath = "../images/"
var gChess;

$(function(){
  $.ajaxSetup ({
      cache: false
  });

  loadImages();
  $(document).everyTime(50, "images_loading", function(){
    if(gImagesLoaded){
      $(document).stopTime("images_loading");
      gChess = new Chess(document.getElementById("game"), <%= @game.id %>, "<%= (current_user? @game.white) ? "white" : (current_user? @game.black) ? "black" : "observer" %>");
      gChess.init();
      gChess.numMoves = <%= @game.moves.count %>
      <%= "gChess.inverted = true;" if current_user? @game.black %>
      <%  if (current_user?(@game.black) || current_user?(@game.white)) && @game.active %>
      gChess.canvasElement.addEventListener("click", clickListener, false);
      <% end %>
      <% if @game.active %>
      gChess.turn('<%= (@game.turn == @game.white) ? "white" : "black" %>');      
      <% else %>
      gChess.gameInProgress = false;
      $('#black-move').fadeOut();
      $('#white-move').fadeOut();
      <% end %>

      $(document).everyTime(gChess.interval, "loop", function(){
	gChess.loop();
      });

      $("#board").fadeIn('slow');
    }
  });

  var pusher = new Pusher('<%= Pusher.key %>');
  var channel = pusher.subscribe('<%= @game.id %>');
  channel.bind('move', function(data) {
    console.log(data);
    if(data.status == "success"){
      gChess.move(data);
      gChess.capture(data.capture);
      gChess.turn(data.turn);
      gChess.numMoves++;

      var i = Math.ceil(gChess.numMoves / 2);
      if(gChess.numMoves % 2 != 0){
        var s = '<li id="move_' + i + '">' + data.notation + '</li>';
        $('#move_list').append(s);
      } else {
        $('#move_' + i).append('&nbsp;' + data.notation);
      }
      

    } else {
      $.gritter.add({
	  title: data.title,
	  text: data.text
      });
    }
  });

});

function clickListener(e){
  gChess.canvasOnClick(e);
}